// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using azuretest.Data;

#nullable disable

namespace azuretest.Migrations
{
    [DbContext(typeof(StudentDbContext))]
    [Migration("20231013192928_AddMoreData")]
    partial class AddMoreData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("azuretest.Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "123 Main St",
                            City = "New York",
                            Email = "abc@gmail.com",
                            Name = "John Doe",
                            Phone = "1234567890"
                        },
                        new
                        {
                            ID = 2,
                            Address = "123 Main St",
                            City = "New York",
                            Email = "abc@gmail.com",
                            Name = "Sammy",
                            Phone = "1234567890"
                        },
                        new
                        {
                            ID = 3,
                            Address = "123 Main St",
                            City = "New York",
                            Email = "abc@gmail.com",
                            Name = "Sammy Doe",
                            Phone = "1234567890"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
